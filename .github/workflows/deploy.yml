name: Deploy to GCP Cloud Run

on:
  push:
    branches:
      - main

jobs:
  job_id:
    runs-on: ubuntu-latest
    steps:
    - id: 'auth'
      uses: 'google-github-actions/auth@v2'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v2'
      with:
        project_id: '${{ secrets.GCP_PROJECT_ID}}'

    - name: 'Use gcloud CLI'
      run: 'gcloud info'

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Save Google Cloud credentials
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" | base64 --decode > $HOME/gcloud.json

    - name: Set GOOGLE_APPLICATION_CREDENTIALS
      run: |
        export GOOGLE_APPLICATION_CREDENTIALS="$HOME/gcloud.json"
    
    - name: Authenticate gcloud
      run: |
        gcloud auth activate-service-account --key-file=$HOME/gcloud.json
        
   # Create the service account key file
    #- name: Create GCP credentials file
    #  run: echo "${{ secrets.GCP_SA_KEY }}"  > $HOME/gcloud.json

    # Authenticate using the newly created service account key file
    #- name: Authenticate to Google Cloud
    #  run: gcloud auth activate-service-account --key-file=$HOME/gcloud.json
      
    #- name: Authenticate with docker
    #  run: gcloud auth configure-docker gcr.io

    - name: Verify credential file exists
      run: |
        ls -lR $HOME
        
    - name: Build image
      run: gcloud builds submit --tag gcr.io/deep-voyage-436902-b3/svelte-sql-gcp


    # Step 4: Deploy to Cloud Run
#    - name: Deploy to Cloud Run
#      run: |
#        gcloud run deploy daves-sveltekit-app \
#          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/svelte-sql-gcp \
#          --platform managed \
 #         --region ${{ secrets.GCP_REGION }} \
 #         --allow-unauthenticated \
 #         --add-cloudsql-instances ${{ secrets.GCP_PROJECT_ID }}:${{ secrets.GCP_REGION }}:svelte-test
