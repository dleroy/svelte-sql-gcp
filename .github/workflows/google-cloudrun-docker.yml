# JobCamp Deploy
# This workflow build and push a Docker container to Google Artifact Registry
# and deploy it on Cloud Run when a commit is pushed to the "main"
# branch.
#
# To configure this workflow:
#
# 1. Enable the following Google Cloud APIs:
#
#    - Artifact Registry (artifactregistry.googleapis.com)
#    - Cloud Run (run.googleapis.com)
#    - IAM Credentials API (iamcredentials.googleapis.com)
#
#    You can learn more about enabling APIs at
#    https://support.google.com/googleapi/answer/6158841.
#
# 2. Create and configure a Workload Identity Provider for GitHub:
#    https://github.com/google-github-actions/auth#preferred-direct-workload-identity-federation.
#
#    Depending on how you authenticate, you will need to grant an IAM principal
#    permissions on Google Cloud:
#
#    - Artifact Registry Administrator (roles/artifactregistry.admin)
#    - Cloud Run Developer (roles/run.developer)
#
#    You can learn more about setting IAM permissions at
#    https://cloud.google.com/iam/docs/manage-access-other-resources
#
# 3. Change the values in the "env" block to match your values.

name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: 'deep-voyage-436902-b3' 
  REGION: 'us-central1'
  SERVICE: 'github-actions-build-deploy'
  GAR_LOCATION: 'us-central1'
  GAR_NAME: 'jobcamp'

jobs:
  deploy:
    permissions:
      contents: 'read'
      id-token: 'write'
      
    runs-on: 'ubuntu-latest'
    
    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@v4'

      # Configure credential auth json
      #
      # See https://github.com/google-github-actions/auth for more options,
      # including authenticating via a JSON credentials file.
      - name: Google Auth
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_JSON }}'

      - name: 'Set account'
        run: |-
          gcloud auth activate-service-account --key-file="$credentials_file_path"

      # BEGIN - Docker auth and build
      #
      # If you already have a container image, you can omit these steps.
      - name: 'Docker Auth'
        run: |-
          gcloud auth configure-docker "${{ env.GAR_LOCATION }}-docker.pkg.dev"
          
      - name: 'Build and Push Container'
        run: |-
          DOCKER_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" ./
          docker push "${DOCKER_TAG}"
      #- name: 'Deploy to Cloud Run'

        # END - Docker auth and build

        #uses: 'google-github-actions/deploy-cloudrun@v2'
        #with:
          #service: '${{ env.SERVICE }}'
          #region: '${{ env.REGION }}'
          # NOTE: If using a pre-built image, update the image name below:

          #image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}'
      # If required, use the Cloud Run URL output in later steps
      #- name: 'Show output'
        #run: |2-

          #echo ${{ steps.deploy.outputs.url }}
